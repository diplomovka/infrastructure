# created based on: https://github.com/confluentinc/cp-all-in-one/blob/7.2.1-post/cp-all-in-one/docker-compose.yml
# healthcheck and depends on created based on https://github.com/confluentinc/cp-demo/blob/7.2.1-post/docker-compose.yml

# NOTE: postgres_db, pgadmin, structured_data_consumer and structured_data_producer were removed, because they aren't needed in hash experiment

version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 20
      interval: 10s
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.2.1
    container_name: broker
    hostname: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - 9092:9092
      - 9101:9101
    depends_on:
      - zookeeper
        # condition: service_healthy
    environment:
      # some envs taken from https://betterprogramming.pub/adding-schema-registry-to-kafka-in-your-local-docker-environment-49ada28c8a9b
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT #PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:29092, # PLAINTEXT_INTERNAL://broker:29092 # PLAINTEXT://broker:9092 PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema_registry:8085
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  # schema_registry created based on: https://github.com/confluentinc/cp-demo/blob/7.2.1-post/docker-compose.yml
  schema_registry:
    image: confluentinc/cp-schema-registry:7.2.1
    container_name: schema_registry
    hostname: schema_registry
    # restart: always
    ports:
      - '8085:8085'
    depends_on:
      - zookeeper
      - broker
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      # SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      # SCHEMA_REGISTRY_DEBUG: 'true'
      # SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085

  files_consumer:
    image: ykbhlvck/files_consumer:hbase-experiment
    container_name: files_consumer
    hostname: files_consumer
    volumes:
      - ./experiments_data:/app/experiments_data
    env_file:
      - files_consumer.env
      - minio.env
    depends_on:
      - minio
      - broker
      - zookeeper
      - schema_registry
      - hbase

  local_files_producer:
    image: ykbhlvck/local_files_producer:latest
    container_name: local_files_producer
    volumes:
      - ../local_file_producer/experiments_input_data:/app/experiments_input_data
      - ./experiments_data:/app/experiments_data
    env_file:
      - local_files_producer.env
    depends_on:
      - broker
      - zookeeper
      - schema_registry

  hbase:
    image: dajobe/hbase:latest
    container_name: hbase
    ports:
        # REST API
      - '8080:8080'
        # REST Web UI at :8085/rest.jsp
      - '8888:8085'
        # Thrift API
      - '9090:9090'
        # Thrift Web UI at :9095/thrift.jsp
      - '9095:9095'
        # HBase's Embedded zookeeper cluster
      - '2200:2181'
        # HBase Master web UI at :16010/master-status;  ZK at :16010/zk.jsp
      - '16010:16010'
    volumes:
      - hbase:/data

  minio:
    image: quay.io/minio/minio:RELEASE.2022-09-25T15-44-53Z.fips
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    env_file:
      - minio.env
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data # command source: http://www.sefidian.com/2022/04/08/deploy-standalone-minio-using-docker-compose/

  # nginx:
  #   image: nginx:1.21.3
  #   container_name: nginx
  #   restart: always
  #   depends_on:
  #     - files_consumer
  #   volumes:
  #     - ./app.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - 80:80

volumes:
  redis_data:
  minio_data:
  hbase: